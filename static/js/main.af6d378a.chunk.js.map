{"version":3,"sources":["functions/arrayFiltersFromList.js","components/Form.js","components/ContentItem.js","components/Content.js","components/CoctailList.js","components/Header.js","App.js","index.js"],"names":["arrayFiltersFromList","filtersFromServer","drinks","map","item","index","name","strCategory","id","isChecked","Form","props","state","filters","changeFilter","bind","submitForm","action","actionTarget","target","value","this","setState","prevState","idOfFilterToChange","findIndex","filter","preventDefault","applyFilters","className","onSubmit","htmlFor","key","type","checked","onChange","onClick","Component","ContentItem","src","strDrinkThumb","alt","strDrink","Content","content","isLoading","loadData","contentUrl","fetch","response","json","contentFromServer","idDrink","CoctailList","ShowfilteredContent","length","Header","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.af6d378a.chunk.js","sourcesContent":["function arrayFiltersFromList(filtersFromServer) {\n  const filtersArr = filtersFromServer.drinks;\n\n  return (\n    filtersArr.map(\n      (item, index) => ({\n        name: item.strCategory, id: index, isChecked: true,\n      })\n    ));\n}\n\nexport default arrayFiltersFromList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filters: this.props.filters,\n    };\n    this.changeFilter = this.changeFilter.bind(this);\n    this.submitForm = this.submitForm.bind(this);\n  }\n\n  changeFilter(action) {\n    const actionTarget = action.target.value;\n\n    this.setState((prevState) => {\n      const { filters } = prevState;\n      const idOfFilterToChange = filters.findIndex(filter => (\n        filter.name === actionTarget\n      ));\n\n      filters[idOfFilterToChange].isChecked\n        = !filters[idOfFilterToChange].isChecked;\n\n      return ({\n        ...prevState, filters,\n      });\n    });\n  }\n\n  submitForm(action) {\n    action.preventDefault();\n    const { applyFilters } = this.props;\n\n    applyFilters(this.state.filters);\n  }\n\n  render() {\n    return (\n      <form className=\"filters-block\" onSubmit={this.submitForm}>\n        {\n          this.state.filters.map(filter => (\n            <label\n              className=\"filters-block__label\"\n              htmlFor={filter.name}\n              key={filter.name}\n            >\n              <input\n                className=\"filters-block__checkbox\"\n                type=\"checkbox\"\n                value={filter.name}\n                checked={filter.isChecked}\n                key={filter.id}\n                onChange={this.changeFilter}\n                id={filter.name}\n              />\n              <span\n                key={filter.id + filter.name}\n                className={`image${(filter.isChecked ? ' image_active' : '')}`}\n              />\n              {filter.name}\n            </label>\n          ))\n        }\n        <button\n          className=\"filters-block__button\"\n          type=\"submit\"\n          onClick={this.submitForm}\n        >\n          Apply\n        </button>\n      </form>\n    );\n  }\n}\n\nForm.propTypes = {\n  applyFilters: PropTypes.func.isRequired,\n  filters: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default Form;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction ContentItem(props) {\n  const { item } = props;\n\n  return (\n    <div className=\"coctail-card\">\n      <img\n        className=\"coctail-card__image\"\n        src={item.strDrinkThumb}\n        alt={item.strDrink}\n      />\n      <p className=\"coctail-card__description\">{item.strDrink}</p>\n    </div>\n  );\n}\n\nContentItem.propTypes = {\n  item: PropTypes.shape({\n    strDrink: PropTypes.string,\n    strDrinkThumb: PropTypes.string,\n    idDrink: PropTypes.string,\n  }).isRequired,\n};\n\nexport default ContentItem;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ContentItem from './ContentItem';\nimport { Loader } from 'semantic-ui-react';\n\nclass Content extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      content: null,\n      isLoading: true,\n    };\n    this.loadData = this.loadData.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  async loadData() {\n    const { filter } = this.props;\n    const contentUrl\n      = `https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=${filter}`;\n    const response = await fetch(contentUrl);\n    const contentFromServer = await response.json();\n\n    this.setState({\n      content: contentFromServer.drinks, isLoading: false,\n    });\n  }\n\n  render() {\n    const { isLoading } = this.state;\n\n    if (isLoading) {\n      return (\n        <div className=\"ui active centered inline loader\" />\n      );\n    }\n\n    const { filter } = this.props;\n    const { content } = this.state;\n\n    return (\n      <div className=\"content-row\">\n        <h2 className=\"content-row__header\">\n          {filter}\n        </h2>\n        <div className=\"content-row__block\">\n          {\n            content.map(item => <ContentItem key={item.idDrink} item={item} />)\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nContent.propTypes = {\n  filter: PropTypes.string.isRequired,\n};\n\nexport default Content;\n","import React, { Component } from 'react';\nimport arrayFiltersFromList from '../functions/arrayFiltersFromList';\nimport Form from './Form';\nimport Content from './Content';\nimport { Loader } from 'semantic-ui-react';\n\nclass CoctailList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filters: null,\n      isLoading: true,\n    };\n    this.loadData = this.loadData.bind(this);\n    this.applyFilters = this.applyFilters.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  applyFilters(filters) {\n    this.setState({ filters });\n  }\n\n  async loadData() {\n    const response = await fetch(\n      'https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list'\n    );\n    const filtersFromServer = await response.json();\n    const filters = arrayFiltersFromList(filtersFromServer);\n\n    this.setState({\n      filters, isLoading: false,\n    });\n  }\n\n  render() {\n    const { isLoading } = this.state;\n\n    if (isLoading === false) {\n      const { filters } = this.state;\n      const filteredContent = filters.filter(item => item.isChecked === true);\n      let ShowfilteredContent = filteredContent.map(item => (\n        <Content key={item.id} filter={item.name} />\n      ));\n\n      if (ShowfilteredContent.length === 0) {\n        ShowfilteredContent = <h2>No cocktails were found</h2>;\n      }\n\n      return (\n        <div className=\"table-layout\">\n          <Form filters={filters} applyFilters={this.applyFilters} />\n          <div className=\"content\">\n            {\n              ShowfilteredContent\n            }\n          </div>\n        </div>\n      );\n    }\n\n    // return (<div>Loading</div>);\n    return (\n      <div className=\"ui active centered inline loader\" />\n    );\n  }\n}\n\nexport default CoctailList;\n","import React from 'react';\n\nfunction Header() {\n\n  return (\n    <div className=\"header-block\">\n      Coctail DB\n      <div className=\"header-block__image\" />\n    </div>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport './App.css';\nimport CoctailList from './components/CoctailList';\nimport Header from './components/Header';\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <CoctailList />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}